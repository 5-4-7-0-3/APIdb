version: "3.1"

services:
    api:
        container_name: api
        build: .
        env_file:
            - .env
        command: ["npx", "nodemon", "./index.ts"]
        ports:
            - "8080:8080"

        volumes:
            - .:/api
        networks:
            - app-network

    web:
        image: nginx
        container_name: web
        volumes:
            - ./volumes/nginx/data/certbot/conf:/etc/letsencrypt
            - ./volumes/nginx/data/certbot/www:/var/www/certbot
            - ./volumes/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
            - ./volumes/nginx/cache:/data/nginx/cache
        ports:
            - "9090:80"
            - 443:443
        environment:
            - NGINX_HOST=foobar.com
            - NGINX_PORT=80
        networks:
            - app-network
        depends_on:
            - api
        restart: unless-stopped
        command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

    mongo:
        image: mongo:4.4.9-focal
        container_name: mongo
        restart: always
        env_file:
            - .env
        volumes:
            - ./volumes/db:/data/db
        ports:
            - "27017:27017"
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: example
            MONGO_INITDB_DATABASE: API
        networks:
            - app-network
    certbot:
        container_name: certbot
        image: certbot/certbot
        networks:
            - app-network
        volumes:
            - ./volumes/nginx/data/certbot/conf:/etc/letsencrypt
            - ./volumes/nginx/data/certbot/www:/var/www/certbot
        command: certbot --nginx -d api.com -d www.api.com
        restart: unless-stopped
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

    minio:
        image: minio/minio:latest
        container_name: minio
        ports:
            - "9000:9000"
            - "9001:9001"
        volumes:
            - ./volumes/minio:/data
        environment:
            MINIO_ROOT_USER: admintest
            MINIO_ROOT_PASSWORD: admintest
            # MINIO_ACCESS_KEY: minio-access-key
            # MINIO_SECRET_KEY: minio-secret-key
        command: server /data
        networks:
            - app-network
networks:
    app-network:
        driver: bridge
# http://172.22.0.3:9000
